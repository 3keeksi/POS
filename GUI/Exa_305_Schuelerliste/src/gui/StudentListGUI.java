/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import classes.StudentListModel;
import beans.Student;
import java.time.DateTimeException;
import java.time.LocalDate;
import java.time.Month;
import java.time.format.DateTimeFormatter;
import java.time.temporal.ChronoField;
import java.time.temporal.TemporalAccessor;
import java.util.List;
import java.util.Locale;
import javax.swing.JOptionPane;
import sun.awt.image.PNGImageDecoder;

/**
 *
 * @author Denis Imeri
 */
public class StudentListGUI extends javax.swing.JFrame {

    private StudentListModel model = new StudentListModel();

    /**
     * Creates new form NewJFrame
     */
    public StudentListGUI() {
        initComponents();
        liStudents.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        paTop = new javax.swing.JPanel();
        lbFirst = new javax.swing.JLabel();
        tfFirst = new javax.swing.JTextField();
        lbLast = new javax.swing.JLabel();
        tfLast = new javax.swing.JTextField();
        lbBDay = new javax.swing.JLabel();
        tfBDay = new javax.swing.JTextField();
        btInsert = new javax.swing.JButton();
        btDelete = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        spStudents = new javax.swing.JScrollPane();
        liStudents = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        paTop.setLayout(new java.awt.GridBagLayout());

        lbFirst.setText("Vorname:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        paTop.add(lbFirst, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        paTop.add(tfFirst, gridBagConstraints);

        lbLast.setText("Nachname: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        paTop.add(lbLast, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        paTop.add(tfLast, gridBagConstraints);

        lbBDay.setText("Geburtsdatum");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        paTop.add(lbBDay, gridBagConstraints);

        tfBDay.setText("DD.MM.YYYY");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        paTop.add(tfBDay, gridBagConstraints);

        btInsert.setText("Einfügen");
        btInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onInsertStudent(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        paTop.add(btInsert, gridBagConstraints);

        btDelete.setText("Löschen");
        btDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onRemoveStudent(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        paTop.add(btDelete, gridBagConstraints);

        jButton1.setText("Ändern");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onUpdateStudent(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        paTop.add(jButton1, gridBagConstraints);

        getContentPane().add(paTop, java.awt.BorderLayout.CENTER);

        liStudents.setBorder(javax.swing.BorderFactory.createTitledBorder("Students"));
        liStudents.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                onDisplayStudent(evt);
            }
        });
        spStudents.setViewportView(liStudents);

        getContentPane().add(spStudents, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void onRemoveStudent(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onRemoveStudent
        List<Student> toRemove = liStudents.getSelectedValuesList();
        model.removeStudents(toRemove);
    }//GEN-LAST:event_onRemoveStudent

    private void onInsertStudent(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onInsertStudent
        String first = tfFirst.getText();
        String last = tfLast.getText();
        String[] strDates = tfBDay.getText().split("\\.");
        if (strDates.length != 3) {
            JOptionPane.showMessageDialog(this, "Falsches Datum");
            return;
        }
        try {
            int year = Integer.valueOf(strDates[2]);
            String month = strDates[1];
            if (month == "Mrz") {
                month = "Mär";
            }

            DateTimeFormatter dtfMonth = DateTimeFormatter.ofPattern("MMM", Locale.GERMAN);
            TemporalAccessor acc = dtfMonth.parse(month);
            int day = Integer.valueOf(strDates[0]);
            LocalDate bday = LocalDate.of(year, acc.get(ChronoField.MONTH_OF_YEAR), day);
            model.addStudent(new Student(first, last, bday));
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Falsches Datum");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Dieser Student exisitiert schon");
        }
    }//GEN-LAST:event_onInsertStudent

    private void onUpdateStudent(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onUpdateStudent
        int[] indices = liStudents.getSelectedIndices();
        if (indices.length != 1) {
            JOptionPane.showMessageDialog(this, "Entweder keine oder mehrere Werte ausgewählt");
            return;
        }
        String first = tfFirst.getText();
        String last = tfLast.getText();
        String[] strDates = tfBDay.getText().split("\\.");
        if (strDates.length != 3) {
            JOptionPane.showMessageDialog(this, "Falsches Datum");
            return;
        }
        try {
            int year = Integer.valueOf(strDates[2]);
            String month = strDates[1];
            if (month == "Mrz") {
                month = "Mär";
            }

            DateTimeFormatter dtfMonth = DateTimeFormatter.ofPattern("MMM", Locale.GERMAN);
            TemporalAccessor acc = dtfMonth.parse(month);
            int day = Integer.valueOf(strDates[0]);
            LocalDate bday = LocalDate.of(year, acc.get(ChronoField.MONTH_OF_YEAR), day);
            model.updateStudent(indices[0] ,new Student(first, last, bday));
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Falsches Datum");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Dieser Student exisitiert schon");
        }
    }//GEN-LAST:event_onUpdateStudent

    private void onDisplayStudent(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_onDisplayStudent
        try {
            Student student = liStudents.getSelectedValuesList().get(0);
            tfFirst.setText(student.getFirstname());
            tfLast.setText(student.getLastname());
            tfBDay.setText(student.getDateOfBirth());
        } catch (IndexOutOfBoundsException e) {
            tfFirst.setText("");
            tfLast.setText("");
            tfBDay.setText("");
        }
    }//GEN-LAST:event_onDisplayStudent

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentListGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentListGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentListGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentListGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentListGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btDelete;
    private javax.swing.JButton btInsert;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel lbBDay;
    private javax.swing.JLabel lbFirst;
    private javax.swing.JLabel lbLast;
    private javax.swing.JList<Student> liStudents;
    private javax.swing.JPanel paTop;
    private javax.swing.JScrollPane spStudents;
    private javax.swing.JTextField tfBDay;
    private javax.swing.JTextField tfFirst;
    private javax.swing.JTextField tfLast;
    // End of variables declaration//GEN-END:variables
}
