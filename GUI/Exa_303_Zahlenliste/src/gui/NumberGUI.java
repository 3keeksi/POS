/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.util.LinkedList;
import java.util.List;
import java.util.Random;
import javax.swing.JOptionPane;

/**
 *
 * @author Denis Imeri
 */
public class NumberGUI extends javax.swing.JFrame {

    public List<Integer> numbers = new LinkedList<>();

    /**
     * Creates new form NumberGUI
     */
    public NumberGUI() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        init = new javax.swing.ButtonGroup();
        change = new javax.swing.ButtonGroup();
        paTop = new javax.swing.JPanel();
        lbElems = new javax.swing.JLabel();
        slElems = new javax.swing.JSlider();
        slRandom = new javax.swing.JSlider();
        rbRandom = new javax.swing.JRadioButton();
        rbFix = new javax.swing.JRadioButton();
        tfFix = new javax.swing.JTextField();
        btInit = new javax.swing.JButton();
        paMiddle = new javax.swing.JPanel();
        lbIndex = new javax.swing.JLabel();
        tfInput = new javax.swing.JTextField();
        rbIndex = new javax.swing.JRadioButton();
        btDelete = new javax.swing.JButton();
        rbWert = new javax.swing.JRadioButton();
        btInsert = new javax.swing.JButton();
        paBottom = new javax.swing.JPanel();
        spBottom = new javax.swing.JScrollPane();
        taOut = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(600, 800));
        setMinimumSize(new java.awt.Dimension(525, 500));
        setPreferredSize(new java.awt.Dimension(525, 700));

        paTop.setBorder(javax.swing.BorderFactory.createTitledBorder("init"));
        paTop.setLayout(new java.awt.GridBagLayout());

        lbElems.setText("Elemente:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 3;
        gridBagConstraints.ipady = 3;
        paTop.add(lbElems, gridBagConstraints);

        slElems.setMajorTickSpacing(10);
        slElems.setMinimum(10);
        slElems.setPaintLabels(true);
        slElems.setPaintTicks(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 167;
        gridBagConstraints.ipady = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        paTop.add(slElems, gridBagConstraints);

        slRandom.setMajorTickSpacing(10);
        slRandom.setMinorTickSpacing(10);
        slRandom.setPaintLabels(true);
        slRandom.setPaintTicks(true);
        slRandom.setValue(20);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 167;
        gridBagConstraints.ipady = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        paTop.add(slRandom, gridBagConstraints);

        init.add(rbRandom);
        rbRandom.setSelected(true);
        rbRandom.setText("Zufallswerte");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 3;
        gridBagConstraints.ipady = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        paTop.add(rbRandom, gridBagConstraints);

        init.add(rbFix);
        rbFix.setText("Fixer Wert");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 3;
        gridBagConstraints.ipady = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        paTop.add(rbFix, gridBagConstraints);

        tfFix.setText("10");
        tfFix.setMinimumSize(new java.awt.Dimension(50, 24));
        tfFix.setPreferredSize(new java.awt.Dimension(50, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 3;
        gridBagConstraints.ipady = 3;
        paTop.add(tfFix, gridBagConstraints);

        btInit.setText("init");
        btInit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onInit(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 3;
        gridBagConstraints.ipady = 3;
        paTop.add(btInit, gridBagConstraints);

        getContentPane().add(paTop, java.awt.BorderLayout.PAGE_START);

        paMiddle.setBorder(javax.swing.BorderFactory.createTitledBorder("Ändern"));
        paMiddle.setMaximumSize(new java.awt.Dimension(525, 100));
        paMiddle.setMinimumSize(new java.awt.Dimension(168, 80));
        paMiddle.setPreferredSize(new java.awt.Dimension(525, 80));
        paMiddle.setLayout(new java.awt.GridLayout(3, 2));

        lbIndex.setText(" Index/Wert");
        paMiddle.add(lbIndex);
        paMiddle.add(tfInput);

        change.add(rbIndex);
        rbIndex.setSelected(true);
        rbIndex.setText("Index");
        rbIndex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbIndexActionPerformed(evt);
            }
        });
        paMiddle.add(rbIndex);

        btDelete.setText("löschen");
        btDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onDelete(evt);
            }
        });
        paMiddle.add(btDelete);

        change.add(rbWert);
        rbWert.setText("Wert");
        paMiddle.add(rbWert);

        btInsert.setText("einfügen");
        btInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onInsert(evt);
            }
        });
        paMiddle.add(btInsert);

        getContentPane().add(paMiddle, java.awt.BorderLayout.CENTER);

        paBottom.setMaximumSize(new java.awt.Dimension(525, 130));
        paBottom.setMinimumSize(new java.awt.Dimension(525, 120));
        paBottom.setPreferredSize(new java.awt.Dimension(525, 130));
        paBottom.setLayout(new java.awt.BorderLayout());

        spBottom.setPreferredSize(new java.awt.Dimension(236, 130));

        taOut.setEditable(false);
        taOut.setColumns(20);
        taOut.setRows(5);
        taOut.setMinimumSize(new java.awt.Dimension(220, 16));
        taOut.setName(""); // NOI18N
        taOut.setPreferredSize(new java.awt.Dimension(220, 100));
        spBottom.setViewportView(taOut);

        paBottom.add(spBottom, java.awt.BorderLayout.PAGE_END);

        getContentPane().add(paBottom, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void onInit(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onInit
        int anz = slElems.getValue();
        int upper;
        if (rbRandom.isSelected()) {
            upper = slRandom.getValue();
        } else {
            try {
                upper = Integer.parseInt(tfFix.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Keine Zahl beim fixen Wert eingegeben");
                return;
            }
        }
        numbers.clear();
        Random rand = new Random();
        for (int i = 1; i <= anz; i++) {
            try {
                int num = rand.nextInt(upper);
                numbers.add(num);
            } catch (IllegalArgumentException e) {
                JOptionPane.showMessageDialog(this, "Obergrenze ist 0 oder kleiner");
                return;
            }
        }
        printList();
    }//GEN-LAST:event_onInit

    public void printList() {
        taOut.setText("");
        for (int i = 1; i <= numbers.size(); i++) {
            taOut.append(String.format("%2d", numbers.get(i-1)));
            if (i % 10 == 0) {
                taOut.append("\n");
            } else {
                taOut.append(", ");
            }
        }
    }

    private void onDelete(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onDelete
        taOut.setText("");
        int num = Integer.parseInt(tfInput.getText());
        if (rbIndex.isSelected()) {
            numbers.remove(num-1);
            printList();
            return;
        }
        int index = 0;
        while (true) {
            try {
                index = numbers.indexOf(num);
                if(index == -1){
                    break;
                }
                numbers.remove(index);
            } catch (IndexOutOfBoundsException e) {
                JOptionPane.showMessageDialog(this, "This item isnt in the list");
                break;
            }
        }

        printList();
    }//GEN-LAST:event_onDelete

    private void onInsert(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onInsert
        Random rand = new Random();
        int num = Integer.parseInt(tfInput.getText());
        
        
        
        int upper;
        if (rbRandom.isSelected()) {
            upper = slRandom.getValue();
        } else {
            try {
                upper = Integer.parseInt(tfFix.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Keine Zahl beim fixen Wert eingegeben");
                return;
            }
        }
        
        if(rbWert.isSelected()){
            numbers.add(rand.nextInt(upper));
            printList();
            return;
        }
        
        int index = Integer.parseInt(tfInput.getText());
        try {
            numbers.add(index-1, rand.nextInt(upper));
        }catch(IndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(this, "The index isn't acceptable");
        }
        printList();
    }//GEN-LAST:event_onInsert

    private void rbIndexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbIndexActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbIndexActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NumberGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NumberGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NumberGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NumberGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NumberGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btDelete;
    private javax.swing.JButton btInit;
    private javax.swing.JButton btInsert;
    private javax.swing.ButtonGroup change;
    private javax.swing.ButtonGroup init;
    private javax.swing.JLabel lbElems;
    private javax.swing.JLabel lbIndex;
    private javax.swing.JPanel paBottom;
    private javax.swing.JPanel paMiddle;
    private javax.swing.JPanel paTop;
    private javax.swing.JRadioButton rbFix;
    private javax.swing.JRadioButton rbIndex;
    private javax.swing.JRadioButton rbRandom;
    private javax.swing.JRadioButton rbWert;
    private javax.swing.JSlider slElems;
    private javax.swing.JSlider slRandom;
    private javax.swing.JScrollPane spBottom;
    private javax.swing.JTextArea taOut;
    private javax.swing.JTextField tfFix;
    private javax.swing.JTextField tfInput;
    // End of variables declaration//GEN-END:variables
}
