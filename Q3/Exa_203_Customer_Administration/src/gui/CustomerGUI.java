/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import beans.Customer;
import beans.Location;
import bl.CustomerListModel;
import io.FileAccess;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author crether
 */
public class CustomerGUI extends javax.swing.JFrame {

    private DefaultComboBoxModel<String> countries = new DefaultComboBoxModel<>();
    private String filebase = System.getProperty("user.dir") + File.separator + "src" + File.separator + "res";
    private DefaultListModel<Location> locationsModel = new DefaultListModel<>();
    private List<Location> locations = new ArrayList<>();
    private DateTimeFormatter dtf = DateTimeFormatter.ofPattern("MM/dd/YYYY");
    private CustomerListModel customerModel;
    private List<Customer> customers = new ArrayList<>();

    /**
     * Creates new form CustomerGUI
     */
    public CustomerGUI() {
        initComponents();
        cbCountries.setModel(countries);
        liLocations.setModel(locationsModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popSort = new javax.swing.JPopupMenu();
        miSortName = new javax.swing.JMenuItem();
        miSortAge = new javax.swing.JMenuItem();
        miSendInvite = new javax.swing.JMenuItem();
        paLocations = new javax.swing.JPanel();
        cbCountries = new javax.swing.JComboBox<>();
        spLocations = new javax.swing.JScrollPane();
        liLocations = new javax.swing.JList<>();
        spCustomers = new javax.swing.JScrollPane();
        liCustomers = new javax.swing.JList<>();
        mbFile = new javax.swing.JMenuBar();
        meFIle = new javax.swing.JMenu();
        miLoadFile = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();

        miSortName.setText("Sort by name");
        miSortName.setActionCommand("name");
        miSortName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onSortByName(evt);
            }
        });
        popSort.add(miSortName);

        miSortAge.setText("Sort by age");
        miSortAge.setActionCommand("name");
        miSortAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onSortByAge(evt);
            }
        });
        popSort.add(miSortAge);

        miSendInvite.setText("Send Invitation");
        miSendInvite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onSendInvitation(evt);
            }
        });
        popSort.add(miSendInvite);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        paLocations.setBorder(javax.swing.BorderFactory.createTitledBorder("Location"));
        paLocations.setLayout(new java.awt.BorderLayout());

        cbCountries.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbCountries.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onSelectCountry(evt);
            }
        });
        paLocations.add(cbCountries, java.awt.BorderLayout.PAGE_START);

        liLocations.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                onSelectCity(evt);
            }
        });
        spLocations.setViewportView(liLocations);

        paLocations.add(spLocations, java.awt.BorderLayout.CENTER);

        getContentPane().add(paLocations);

        liCustomers.setBorder(javax.swing.BorderFactory.createTitledBorder("Customer"));
        liCustomers.setComponentPopupMenu(popSort);
        spCustomers.setViewportView(liCustomers);

        getContentPane().add(spCustomers);

        meFIle.setText("File");

        miLoadFile.setText("Load Locations");
        miLoadFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onLoadLocations(evt);
            }
        });
        meFIle.add(miLoadFile);

        jMenuItem1.setText("Load Customers");
        jMenuItem1.setActionCommand("loadCustomers");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onLoadCustomers(evt);
            }
        });
        meFIle.add(jMenuItem1);

        mbFile.add(meFIle);

        setJMenuBar(mbFile);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void onLoadLocations(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onLoadLocations
        JFileChooser chooser = new JFileChooser(filebase);
        FileFilter csv = new FileNameExtensionFilter("Comma Seperated Values (.csv)", "csv");
        chooser.setFileFilter(csv);

        if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File file = chooser.getSelectedFile();
            String path = file.getAbsolutePath();

            List<Location> getLocations;
            List<String> getCountries = new ArrayList<>();
            try {
                getLocations = FileAccess.loadLocations(path);
                for (Location location : getLocations) {
                    if (!getCountries.contains(location.getCountry())) {
                        getCountries.add(location.getCountry());
                    }
                    locations.add(location);
                }
                for (String country : getCountries) {
                    countries.addElement(country);
                }
            } catch (FileNotFoundException ex) {
                System.out.println(ex.getStackTrace());
            } catch (IOException ex) {
                Logger.getLogger(CustomerGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_onLoadLocations

    private void onSelectCountry(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onSelectCountry
        String country = (String) cbCountries.getSelectedItem();
        locationsModel.clear();
        for (Location location : locations) {
            if (location.getCountry().equals(country)) {
                locationsModel.addElement(location);
            }
        }
    }//GEN-LAST:event_onSelectCountry

    private void onSelectCity(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_onSelectCity
        int id;
        try {
            id = liLocations.getSelectedValue().getId();
            customerModel.filter(id);
        } catch (NullPointerException e) {
            return;
        }
    }//GEN-LAST:event_onSelectCity

    private void onSortByName(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onSortByName
        customerModel.sort("name");
    }//GEN-LAST:event_onSortByName

    private void onSortByAge(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onSortByAge
        customerModel.sort("age");
    }//GEN-LAST:event_onSortByAge

    private void onLoadCustomers(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onLoadCustomers
        JFileChooser chooser = new JFileChooser(filebase);
        FileFilter csv = new FileNameExtensionFilter("Comma-Seperated-Values (.csv)", "csv");
        chooser.setFileFilter(csv);

        if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            try {
                customers.clear();
                File file = chooser.getSelectedFile();
                
                customers = FileAccess.loadCustomers(file.getAbsolutePath());
                
                customerModel = new CustomerListModel(customers);
                liCustomers.setModel(customerModel);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(CustomerGUI.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(CustomerGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_onLoadCustomers

    private void onSendInvitation(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onSendInvitation
        

        //System.out.println(Locale.getDefault());
    }//GEN-LAST:event_onSendInvitation

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CustomerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CustomerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CustomerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CustomerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CustomerGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbCountries;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JList<Customer> liCustomers;
    private javax.swing.JList<Location> liLocations;
    private javax.swing.JMenuBar mbFile;
    private javax.swing.JMenu meFIle;
    private javax.swing.JMenuItem miLoadFile;
    private javax.swing.JMenuItem miSendInvite;
    private javax.swing.JMenuItem miSortAge;
    private javax.swing.JMenuItem miSortName;
    private javax.swing.JPanel paLocations;
    private javax.swing.JPopupMenu popSort;
    private javax.swing.JScrollPane spCustomers;
    private javax.swing.JScrollPane spLocations;
    // End of variables declaration//GEN-END:variables
}
